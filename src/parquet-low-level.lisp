;;;; Generated by gir2cl on Tue, 10 Dec 2019 22:00:27 +0000

(in-package #:parquet-low-level)

(defparameter *ns* (gir:require-namespace "Parquet"))

(defclass gir-object nil
          ((native-pointer :initarg :native-pointer :reader native-pointer)))

(defclass arrow-file-reader (gir-object) (path source))

(defun make-arrow-file-reader-new-arrow (source)
  (let ((pointer (gir:invoke (*ns* "ArrowFileReader" "new_arrow") source)))
    (make-instance 'arrow-file-reader :native-pointer pointer)))

(defun make-arrow-file-reader-new-path (path)
  (let ((pointer (gir:invoke (*ns* "ArrowFileReader" "new_path") path)))
    (make-instance 'arrow-file-reader :native-pointer pointer)))

(defmethod arrow-file-reader-get-n-row-groups
           ((arrow-file-reader arrow-file-reader))
  (with-slots (native-pointer)
      arrow-file-reader
    (gir:invoke (native-pointer "get_n_row_groups"))))

(defmethod arrow-file-reader-get-schema ((arrow-file-reader arrow-file-reader))
  (with-slots (native-pointer)
      arrow-file-reader
    (gir:invoke (native-pointer "get_schema"))))

(defmethod arrow-file-reader-read-column-data
           ((arrow-file-reader arrow-file-reader) i)
  (with-slots (native-pointer)
      arrow-file-reader
    (gir:invoke (native-pointer "read_column_data") i)))

(defmethod arrow-file-reader-read-table ((arrow-file-reader arrow-file-reader))
  (with-slots (native-pointer)
      arrow-file-reader
    (gir:invoke (native-pointer "read_table"))))

(defmethod arrow-file-reader-set-use-threads
           ((arrow-file-reader arrow-file-reader) use-threads)
  (with-slots (native-pointer)
      arrow-file-reader
    (gir:invoke (native-pointer "set_use_threads") use-threads)))

(defclass arrow-file-writer (gir-object) (path schema sink))

(defun make-arrow-file-writer-new-arrow (schema sink)
  (let ((pointer (gir:invoke (*ns* "ArrowFileWriter" "new_arrow") schema sink)))
    (make-instance 'arrow-file-writer :native-pointer pointer)))

(defun make-arrow-file-writer-new-path (schema path)
  (let ((pointer (gir:invoke (*ns* "ArrowFileWriter" "new_path") schema path)))
    (make-instance 'arrow-file-writer :native-pointer pointer)))

(defmethod arrow-file-writer-close ((arrow-file-writer arrow-file-writer))
  (with-slots (native-pointer)
      arrow-file-writer
    (gir:invoke (native-pointer "close"))))

(defmethod arrow-file-writer-write-table
           ((arrow-file-writer arrow-file-writer) table chunk-size)
  (with-slots (native-pointer)
      arrow-file-writer
    (gir:invoke (native-pointer "write_table") table chunk-size)))

